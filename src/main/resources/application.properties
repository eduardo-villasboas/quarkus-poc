Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named. The configuration keys are structured as follows:
#mp.messaging.[outgoing|incoming].{channel-name}.property=value
#The channel-name segment must match the value set in the @Incoming and @Outgoing annotation:
#quote-requests ? RabbitMQ queue from which we read the quote requests
#quotes ? RabbitMQ exchange in which we write the quotes

# Configure the outgoing RabbitMQ exchange `quote-requests`
mp.messaging.outgoing.quote-requests.connector=smallrye-rabbitmq
mp.messaging.outgoing.quote-requests.exchange.name=quote-requests

#    @Incoming("requests")
#    @Outgoing("quotes")
# Configure the incoming RabbitMQ queue `quote-requests`
mp.messaging.incoming.requests.connector=smallrye-rabbitmq
mp.messaging.incoming.requests.queue.name=quote-requests
mp.messaging.incoming.requests.exchange.name=quote-requests

# Configure the outgoing RabbitMQ exchange `quotes`
mp.messaging.outgoing.quotes.connector=smallrye-rabbitmq
mp.messaging.outgoing.quotes.exchange.name=returned-quotes

#mp.messaging.outgoing.returned-quotes.connector=smallrye-rabbitmq
mp.messaging.incoming.returned-quotes.connector=smallrye-rabbitmq
mp.messaging.incoming.returned-quotes.queue.name=returned-quotes
mp.messaging.incoming.returned-quotes.exchange.name=returned-quotes