#Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named. The configuration keys are structured as follows:
#mp.messaging.[outgoing|incoming].{channel-name}.property=value
#The channel-name segment must match the value set in the @Incoming and @Outgoing annotation:
#quote-requests ? RabbitMQ queue from which we read the quote requests
#quotes ? RabbitMQ exchange in which we write the quotes

quarkus.log.handler.gelf.level=DEBUG
# Configure the outgoing RabbitMQ exchange `quote-requests`
mp.messaging.outgoing.quote-requests.connector=smallrye-rabbitmq
mp.messaging.outgoing.quote-requests.exchange.name=quote-requests-exchange

# Configure the incoming RabbitMQ queue `quote-requests`
#mp.messaging.incoming.requests.client-options-name=requests-options
mp.messaging.incoming.requests.connector=smallrye-rabbitmq
#mp.messaging.incoming.requests.connection-count=5
#mp.messaging.incoming.requests.requested-channel-max=5
mp.messaging.incoming.requests.queue.name=quote-requests-queue
mp.messaging.incoming.requests.exchange.name=quote-requests-exchange
#mp.messaging.incoming.requests.queue.routing-keys=tall,short

#mp.messaging.incoming.requests2.connector=smallrye-rabbitmq
#mp.messaging.incoming.requests2.queue.name=quote-requests-queue
#mp.messaging.incoming.requests2.exchange.name=quote-requests-exchange
#mp.messaging.incoming.requests2.queue.routing-keys=tall,short

# Configure the outgoing RabbitMQ exchange `quotes`
mp.messaging.outgoing.quotes.connector=smallrye-rabbitmq
mp.messaging.outgoing.quotes.exchange.name=returned-quotes-exchange

#mp.messaging.outgoing.returned-quotes.connector=smallrye-rabbitmq
mp.messaging.incoming.returned-quotes.connector=smallrye-rabbitmq
mp.messaging.incoming.returned-quotes.queue.name=returned-quotes-queue
mp.messaging.incoming.returned-quotes.exchange.name=returned-quotes-exchange


quarkus.rabbitmq.devservices.port=5672
mp.messaging.outgoing.quotes.merge=true
#quarkus.rabbitmq.devservices.enable=false
